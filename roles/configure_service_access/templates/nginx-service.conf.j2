# nginx configuration generated by Oceannik

# Project name: {{ project_name }}
# Service name: {{ service_name }}
# Environment: {{ target_environment }}

upstream {{ service_container_upstream_name }} {
    server {{ target_host }}:{{ service_container_host_port }};
}

server {
    {% if tls_enabled %}
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    {% else %}
    listen 80;
    listen [::]:80;
    {% endif %}

    server_name {{ service_domain }};

    {% if tls_enabled %}
    ssl                 on;
    ssl_certificate     /etc/letsencrypt/live/{{ service_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ service_domain }}/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;
    {# ssl_protocols    TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5; #}
    {% endif %}

    location / {
        proxy_pass         http://{{ service_container_upstream_name }}/;
        {# proxy_set_header   Host $host;
        proxy_set_header   Referer $http_referer;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $scheme; #}
    }
}

{% if tls_enabled %}
# Redirect HTTP traffic to HTTPS.
server {
    listen 80;
    listen [::]:80;

    if ($host = {{ service_domain }}) {
        return 301 https://$host$request_uri;
    }

    server_name {{ service_domain }};
    return 404;
}
{% endif %}
